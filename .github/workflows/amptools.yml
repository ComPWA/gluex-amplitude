name: C++

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHONHASHSEED: "0"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "**/*.cc"
      - "**/*.cfg"
      - "**/*.h"
      - "**/Makefile"
      - .github/workflows/amptools.yml
  workflow_dispatch:

jobs:
  build:
    name: Build and execute
    env:
      ROOT_VERSION: v6.28.04
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-12
          - ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache@v3
        with:
          key: root-${{env.ROOT_VERSION}}-${{matrix.os}}
          path: ./root
      - name: Install ROOT
        if: ${{ ! hashFiles('root/**') }}
        run: |
          if [[ ${{matrix.os}}=='ubuntu-22.04' ]]; then
            tar_file=root_${ROOT_VERSION}.Linux-ubuntu22-x86_64-gcc11.3.tar.gz
          elif [[ ${{matrix.os}}=='macos-12' ]]; then
            tar_file=root_${ROOT_VERSION}.macos-12.6-arm64-clang140.tar.gz
          fi
          wget https://root.cern/download/$tar_file -q
          tar xzf $tar_file
      - name: Enforce bash instead of dash
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo rm /bin/sh
          sudo ln -s /bin/bash /bin/sh
      - uses: actions/cache@v3
        with:
          key: binaries-${{ matrix.os }}-${{ hashFiles('**/*.cc', '**/*.h', 'extern/AmpTools', '**/Makefile*') }}
          path: |
            **/*.a
            **/*.d
            **/*.o
            **/compiler_flags
            **/bin
            **/lib
      - name: Build libraries and executables
        run: |
          source ./root/bin/thisroot.sh
          pushd extern/AmpTools; make -j$(nproc); popd
          make -j$(nproc)
      - name: Run executables
        run: |
          cd script
          ./print_amplitudes -c zlm.cfg

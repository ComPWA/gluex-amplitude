[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools"]

[project]
dependencies = ["numpy", "pandas", "uproot"]
description = "Investigation of symbolic amplitude models for the GlueX experiment"
license = {text = "BSD 3-Clause License"}
name = "gluex-amplitude"
requires-python = ">=3.12"
version = "0.0.0"

[project.readme]
content-type = "text/markdown"
file = "README.md"

[dependency-groups]
dev = [
    "ruff",
    "sphinx-autobuild",
    {include-group = "doc"},
    {include-group = "jupyter"},
    {include-group = "notebooks"},
]
doc = [
    "myst-nb",
    "sphinx",
    "sphinx-api-relink",
    "sphinx-book-theme",
    "sphinx-codeautolink[ipython]",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinx-togglebutton",
]
jupyter = [
    "jupyterlab",
    "jupyterlab-code-formatter",
    "jupyterlab-git",
    "jupyterlab-lsp",
    "jupyterlab-myst",
    "jupyterlite-core",
    "jupyterlite-pyodide-kernel",
    "python-lsp-ruff",
    "python-lsp-server[rope]",
]
notebooks = [
    "ampform",
    "ipympl",
    "ipywidgets",
    "matplotlib",
    "sympy",
]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = [
    "linux-64",
    "linux-aarch64",
    "osx-64",
    "osx-arm64",
]

[tool.pixi.dependencies]
clang = "*"
make = "*"
python = "3.12.*"
root = "*"

[tool.pixi.environments]
default = {features = ["dev"], solve-group = "main"}

[tool.pixi.pypi-dependencies]
gluex-amplitude = {path = ".", editable = true}

[tool.pixi.tasks.all]
depends-on = [
    "build",
    "doc",
    "linkcheck",
    "lite",
    "style",
]
description = "Run all continuous integration (CI) tasks locally"

[tool.pixi.tasks.build]
cmd = "make CXX=clang CXXFLAGS='-std=c++20 -O3 -Wno-' SHELL=/bin/bash"
description = "Build C++ project"

[tool.pixi.tasks.doc]
cmd = """
sphinx-build \
    --builder=html \
    --fail-on-warning \
    --keep-going \
    --show-traceback \
    docs/ \
    docs/_build/html/
"""
depends-on = "lite"
description = "Build website"
env = {EXECUTE_NB = "yes", PYTHONWARNINGS = ""}

[tool.pixi.tasks.doclive]
cmd = """
sphinx-autobuild \
    --builder=html \
    --open-browser \
    --port=0 \
    --re-ignore='/_build(/.*)?$' \
    --re-ignore='/\\.cache(/.*)?$' \
    --re-ignore='/\\.egg-info(/.*)?$' \
    --re-ignore='/\\.ipynb_checkpoints(/.*)?$' \
    --re-ignore='/\\.virtual_documents(/.*)?$' \
    --re-ignore='/docs$' \
    --re-ignore='\\.egg-info(/.*)?$' \
    --re-ignore='\\.gif$' \
    --re-ignore='\\.pickle$' \
    --re-ignore='\\.png$' \
    --re-ignore='\\.svg$' \
    docs/ \
    docs/_build/html/
"""
description = "Set up a server to directly preview changes to the HTML pages"

[tool.pixi.tasks.docnblive]
cmd = "pixi run doclive"
description = "Set up a server to directly preview changes to the HTML pages with cached notebook execution"
env = {EXECUTE_NB = "yes"}

[tool.pixi.tasks.lab]
cmd = "jupyter lab docs"
description = "Start Jupyter Lab"

[tool.pixi.tasks.linkcheck]
cmd = """
sphinx-build \
    --builder=linkcheck \
    --show-traceback \
    docs/ \
    docs/_build/linkcheck/
"""
description = "Check external links in the documentation (requires internet connection)"
env = {PYTHONWARNINGS = ""}

[tool.pixi.tasks.lite]
cmd = """
jupyter lite build \
    --contents feynman-gluex-two-pseudoscalar.svg \
    --contents widget.ipynb \
    --ignore-contents=_build \
    --output-dir lite
"""
cwd = "docs"
description = "Build Jupyter Lite server"

[tool.pixi.tasks.style]
cmd = "pre-commit run --all-files"
description = "Perform all linting, formatting, and spelling checks"

[tool.ruff]
extend-include = ["*.ipynb"]
preview = true
show-fixes = true
src = ["src"]

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
ignore = [
    "ANN401",
    "COM812",
    "CPY001",
    "D101",
    "D102",
    "D103",
    "D105",
    "D107",
    "D203",
    "D213",
    "D407",
    "D416",
    "DOC",
    "E501",
    "FURB101",
    "FURB103",
    "FURB140",
    "G004",
    "ISC001",
    "PLW1514",
    "PT001",
    "PTH",
    "SIM108",
]
select = ["ALL"]
task-tags = ["cspell"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["display"]

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.flake8-self]
ignore-names = [
    "_global_settings",
    "_latex",
    "_print",
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = [
    "ANN",
    "B018",
    "C408",
    "C90",
    "D",
    "E303",
    "E703",
    "E741",
    "N803",
    "N806",
    "N816",
    "PLR09",
    "PLR2004",
    "PLW0602",
    "PLW0603",
    "RUF001",
    "S101",
    "T20",
    "TC00",
]
"**/widget.ipynb" = ["ARG001", "ARG002", "S307"]
"docs/*" = [
    "INP001",
    "S101",
    "S113",
]
"docs/conf.py" = ["A001", "D100"]
"script/*" = ["D100", "INP001"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.tomlsort]
all = false
ignore_case = true
in_place = true
sort_first = [
    "build-system",
    "project",
]
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
